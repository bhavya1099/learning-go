// ********RoostGPT********
/*
Test generated by RoostGPT for test go-unit-scenario-filter using AI Type  and AI Model 

ROOST_METHOD_HASH=countingSort_6ecd63b018
ROOST_METHOD_SIG_HASH=countingSort_11ced0d811

Note: Only generate test cases based on the given scenarios,do not generate test cases other than these scenarios
Scenario 1: Empty Array
,Scenario 2: Basic Functionality Test with Positive Numbers

*/

// ********RoostGPT********
// counting_sort.go
package CountingSort

func countingSort(arr []int) []int {
	if len(arr) == 0 {
		return arr
	}

	k := getCountArrayLength(arr)
	count := make([]int, k)
	for _, num := range arr {
		count[num]++
	}

	j := 0
	for i := 0; i < k; i++ {
		for count[i] > 0 {
			arr[j] = i
			j++
			count[i]--
		}
	}
	return arr
}

func getCountArrayLength(arr []int) int {
	max := arr[0]
	for _, num := range arr {
		if num > max {
			max = num
		}
	}
	return max + 1
}
